apiVersion: apps/v1
kind: Deployment
metadata:
  name: sa-course-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sa-course-app
  template:
    metadata:
      labels:
        app: sa-course-app
    spec:
      containers:
        - name: sa-course-app
          image: andyovch/sa-course-app:master
          imagePullPolicy: "Always"
          env:
            - name: SAAPP_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: APP_PORT
            - name: SAAPP_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: SAAPP_DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_PORT
            - name: SAAPP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: DB_USER
            - name: SAAPP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: DB_PASSWORD
            - name: SAAPP_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME
          ports:
            - name: web
              containerPort: 8000
          livenessProbe:
            httpGet:
              port: web
              path: /health
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              port: web
              path: /ready
            initialDelaySeconds: 10
            periodSeconds: 5
      initContainers:
        - name: init-db
          image: busybox:1.28
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
          command: ['sh', '-c', "until nslookup $(DB_HOST).$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for db; sleep 2; done"]
        - name: db-migrations
          image: andyovch/sa-course-app-migrations:v1
          imagePullPolicy: "Always"
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME